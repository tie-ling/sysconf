I should rotate GPG keys on a biannual basis.

1. Replace all occurences of this key with a place holder:
   #+begin_src sh
     cd /old/home/yc/sysconf
     git ls-files -z | xargs -0I{} sed -i "s|$(gpg --export-ssh-key yuchen@posteo.net)|gpg_rotate_holder|g" {}
   #+end_src
2. In password store =$HOME/.password-store=, decrypt all passwords to
   plain text
   #+begin_src sh
     cd $PASSWORD_STORE_DIR
     git ls-files -z | xargs -0I '{}' gpg --output '{}'.txt --decrypt  '{}'
   #+end_src
3. Move existing GNUPGHOME:
   #+begin_src
     gpghome=$GNUPGHOME
     mv $gpghome $HOME/oldgpghome
     mkdir -p $gpghome
     chmod 700 $gpghome
   #+end_src
4. Generate a new GPG key with
   =gpg --yes --quick-gen-key gyuchen86@gmail.com default default never=.
   Defaults are good enough.  Choose a strong password.  Note the key
   id:
   #+begin_src sh
     $ gpg --list-keys --keyid-format=long
     pub   ed25519 2024-02-07 [SC]
     FF1D5A20C1E8634371F8959301567765BB490BBA <- KEYID
     uid                      gyuchen86@gmail.com
     sub   cv25519 2024-02-07 [E]
   #+end_src
   Store that keyid in a variable:
   #+begin_src sh
     KEYID=FF1D5A20C1E8634371F8959301567765BB490BBA
   #+end_src
5. Add auth subkey for SSH.  For SSH (Authenticate).
   Run =gpg --quick-add-key $KEYID - auth=.
6. Identify master key and SSH key. List all secret keys with
   =with-keygrip= option:
   #+begin_src sh
     [yc@qinghe:~]$ gpg --list-secret-keys --with-keygrip
     sec   ed25519 2024-02-07 [SC]
     FF1D5A20C1E8634371F8959301567765BB490BBA           <-- keyid used for password store
     Keygrip = A5FDE8B1C0BE6309C89696B5E40441027B0B24BD
     uid           [ultimate] gyuchen86@gmail.com
     ssb   cv25519 2024-02-07 [E]
     Keygrip = 622F3F9329375B22EBA678B73356D0EFEAC9C131
     ssb   ed25519 2024-02-07 [A]                       <-- [A] stands for Authenticate
     Keygrip = 29A02B877CCE8B816378187DB9DB1BE010650661 <-- SSH key
   #+end_src
7. Add SSH key keygrip to =$HOME/.gnupg/sshcontrol=
   #+begin_src
     # keygrip of SSH subkey
     echo "622F3F9329375B22EBA678B73356D0EFEAC9C131" >> $GNUPGHOME/sshcontrol
   #+end_src
8. Make a tarball of GNUPGHOME:
   #+begin_src sh
     tar --auto-compress --create --file gpg-$(date -I).tar.xz $GNUPGHOME
   #+end_src
9. Update gpg key id file of the password store:
    #+begin_src
      echo "$KEYID" > $PASSWORD_STORE_DIR/.gpg-id
    #+end_src
10. Encrypt passwords with new key and delete plain text files:
    #+begin_src sh
      cd $PASSWORD_STORE_DIR
      git ls-files -z | xargs -0I '{}' gpg --default-recipient-self --compress-algo=none --yes --no-encrypt-to --output '{}' --encrypt '{}'.txt
      git ls-files -z | xargs -0I '{}' rm '{}'.txt
    #+end_src
11. Replace place holder in config with new key:
   #+begin_src sh
     cd /old/home/yc/sysconf
     git ls-files -z | xargs -0I{} sed -i "s|gpg_rotate_holder|$(gpg --export-ssh-key gyuchen86@gmail.com)|g" {}
   #+end_src
12. Restore old gpg home:
    #+begin_src sh
      mv $GNUPGHOME $HOME/newgpghome
      mv $HOME/oldgpghome $GNUPGHOME
      cd $HOME
    #+end_src
13. Back up both tarballs to server and to SD card:
    #+begin_src sh
      scp gpg-$(date -I).tar.xz tl.yc:~/
    #+end_src
14. Commit changes and push:
    #+begin_src sh
      pass git commit -asm'rotate gpg key'
      pass git push
    #+end_src
15. Commit changes and push:
    #+begin_src sh
      cd /old/home/yc/sysconf
      git commit -asm'rotate ssh key'
      git push
      cd $HOME
    #+end_src
16. Deploy key on server with =Ns=.
17. Deploy key on other managed laptops.
18. Restore new home:
    #+begin_src sh
      mv $GNUPGHOME $HOME/oldgpghome
      mv $HOME/newgpghome $GNUPGHOME
    #+end_src
19. Export new public and ssh key:
    #+begin_src sh
      gpg --export --armor
      gpg --export-ssh-key gyuchen86@gmail.com
    #+end_src
20. Upload key to [[https://keys.openpgp.org/][key server]].
21. Update pubkey and ssh key on Github and other web services.
22. Appendix: To restore GNUPGHOME, use:
    #+begin_src sh
      tar --auto-compress --extract --file gpg.tar.xz --directory /oldroot/$HOME/
    #+end_src
